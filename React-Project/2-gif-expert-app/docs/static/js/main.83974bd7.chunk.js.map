{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,sBAAMC,SATY,SAACC,GACnBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAIlB,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SAjBe,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,QAiBfG,YAAY,mC,+BCvBfC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEII,MAAMF,GAFV,cAEbG,EAFa,gBAGEA,EAASC,OAHX,uBAGZC,EAHY,EAGZA,KAGDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,sBAAKc,UAAU,2CAAf,UAEE,qBAAKA,UAAU,uBAAf,SACA,qBAAKC,IAAKf,EAAKgB,IAAKN,MAGlB,4BAAIA,QCRHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAa,IAAD,EACXf,mBAAS,CAC/BsB,KAAM,GACNa,SAAQ,IAHyB,mBAC9BC,EAD8B,KACvBC,EADuB,KAgBrC,OATAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GACnBH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAGlB,CAACpB,IAEIqB,EDbsBK,CAAa1B,GAA/Ba,EAFwB,EAE7BN,KAAYa,EAFiB,EAEjBA,QAClB,OACI,qCACA,6BAAKpB,IACJoB,GAAW,wCACZ,qBAAKJ,UAAU,YAAf,SAEYH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEEA,GADGA,EAAIC,aEVpBgB,EAAe,WAAM,IAAD,EAEO1C,mBAAS,CAAC,cAFjB,mBAEtB2C,EAFsB,KAEV5C,EAFU,KAG7B,OACA,qCACA,yCACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ4C,EAAWnB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEAA,SAAUA,GADFA,Y,MCdtB6B,IAASC,OACL,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.83974bd7.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n    \r\n    const handdleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handdleSubmit = (e) =>{\r\n        e.preventDefault();\r\n    // console.log(\"Submit hecho\");\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue, ...cats])\r\n            setInputValue(' ')\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handdleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value ={ inputValue }\r\n                onChange={handdleInputChange}\r\n                placeholder=\"What do you want to search?\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async(category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=mcNONfITpTBoYTwfHsEaSXQx9GUSa1sW`\r\n    const response = await fetch(url);\r\n    const {data} = await response.json();\r\n\r\n\r\n    const gifs = data.map(img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs\r\n}","import React from 'react'\r\n\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__bounceIn animate__delay-4s\">\r\n         \r\n          <div className=\"card-img-container  \">\r\n          <img src={url} alt={title}/>\r\n\r\n          </div>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const{data:images,loading} = useFetchGifs(category)\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        {loading && <p>Loading</p>}\r\n        <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem \r\n                        key={img.id}\r\n                      {...img}/>\r\n                    ))\r\n                }\r\n          \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading:true\r\n    });\r\n\r\n\r\n    useEffect(()=>{\r\n        getGifs(category).then(imgs =>{\r\n            setstate({\r\n                data:imgs,\r\n                loading:false\r\n            })\r\n        })\r\n    },[category])\r\n\r\n    return state;\r\n}","import { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\n\r\nexport const GifExpertApp = () =>{\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    return(\r\n    <>\r\n    <h2>Gif App</h2>\r\n    <AddCategory setCategories={setCategories}/>\r\n    <hr/>\r\n\r\n    <ol>\r\n        {\r\n            categories.map( category => \r\n              <GifGrid \r\n                 key={category}\r\n              category={category}/>\r\n            )\r\n        }\r\n    </ol>\r\n      </>\r\n    );\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\nReactDOM.render(\n    <GifExpertApp />,\n   \n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}